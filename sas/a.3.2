/* 1.1 CSV → SAS 데이터셋 */
proc import datafile="C:\path\seer_cancer.csv"
    out=seer_raw dbms=csv replace;
    getnames=yes;
run;

/* 1.2 결측치 · 이상치 처리 */
data seer;
  set seer_raw;
  /* 결측치 제거 */
  if cases=. or population=. then delete;
  /* 인구수·케이스 음수 제거 */
  if cases<0 or population<100 then delete;
  /* 로그 오프셋 추가 */
  log_pop = log(population/100000);
run;

/* 1.3 범주형 인코딩 및 계층 변수 생성 */
proc sort data=seer nodupkey out=regions(keep=region_id lat lon);
  by region_id;
run;

data seer;
  set seer;
  /* 연령·인종을 순차형 코드로 변환 */
  age_code = input(age_group, 1.);
  race_code = input(race, 1.);
run;

/* 1.4 공간 가중치 행렬 (Queen’s contiguity 기반) */
/* regions 데이터셋을 IML로 불러와 W[i,j] 생성 */
proc iml;
  use regions; read all var {region_id lat lon} into R;
  n= nrow(R);
  W = j(n,n,0);
  do i=1 to n;
    do j=i+1 to n;
      /* 경도·위도 유클리드 거리(도 단위) */
      dij = sqrt((R[i,2]-R[j,2])##2 + (R[i,3]-R[j,3])##2);
      if dij <= 5 then do; /* 약 5도 ≈ 500km 인접 */
        W[i,j]=1; W[j,i]=1;
      end;
    end;
  end;
  /* 행 표준화 */
  rowS = W[,+];
  W = W / rowS[:,];
  create Wmat from W;
  append from W;
quit;

/* PROC MCMC: Hierarchical Bayesian Poisson Model */
proc mcmc data=seer nmc=15000 nbi=5000 thin=5 seed=2025
          plots=none outpost=hier_post diagnostics=(gelman);
  parms β0 0 β_age 0 β_race 0 σ_u 1;
  
  /* 사전분포 선언 */
  prior β:    ~ normal(0, var=100);
  prior σ_u   ~ halfnormal(0, scale=5);

  /* 지역 랜덤 효과 선언 */
  random u ~ normal(0, var=σ_u**2) subject=region_id;

  /* 선형 예측자 및 포아송 모델 */
  eta = β0 + β_age*age_code + β_race*race_code + u + log_pop;
  lambda = exp(eta);
  model cases ~ poisson(lambda);

  /* 사후분포 요약 */
  ods output PostSummaries=HierSummary;
run;

/* 수렴 진단 R-hat 및 ESS 확인 */
proc mcmc data=hier_post noprint;
  ods output ConvergenceDiagnostics=HierDiag;
run;

/* PROC MCMC: CAR prior for spatial random effect */
proc mcmc data=seer nmc=20000 nbi=10000 thin=10 seed=2025
          outpost=car_post diagnostics=(gelman);
  parms β0 0 β_age 0 β_race 0 rho 0.5 tau2 1;
  
  prior β:    ~ normal(0, var=100);
  prior rho   ~ uniform(0,1);
  prior tau2  ~ igamma(0.01, scale=0.01);

  /* CAR prior: Wmat 읽어들여 phi 선언 */
  array W[50,50] _temporary_;
  /* Wmat은 앞서 생성됨; SAS 데이터셋으로 읽어서 W에 할당 */
  /* 생략: W 로딩 절차 */
  random phi[region_id] ~ car(W, rho, tau2);

  eta = β0 + β_age*age_code + β_race*race_code + phi[region_id] + log_pop;
  lambda = exp(eta);
  model cases ~ poisson(lambda);

  ods output PostSummaries=CarSummary;
run;

/* DIC 계산 (PROC MCMC 출력에서 자동 제공) */
proc print data=HierSummary(keep=DIC) label; label DIC='Hierarchical DIC';
run;
proc print data=CarSummary(keep=DIC)   label; label DIC='Spatial CAR DIC';
run;
